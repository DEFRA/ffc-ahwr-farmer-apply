environment: development
name: ffc-ahwr-farmer-apply
namespace: ffc-ahwr
workstream: ffc-ahwr
image: ffc-ahwr-farmer-apply

labels: {}

aadPodIdentity: true

appInsights:
  connectionString:

azureIdentity:
  clientID:
  resourceID:

containerConfigMap:
  name: ffc-ahwr-farmer-apply-config-map

containerSecret:
  name: ffc-ahwr-farmer-apply-container-secret
  type: Opaque

deployment:
  cpuThreshold: 80
  memoryThreshold: 80
  minReadySeconds: 0
  minReplicas: 1
  maxReplicas: 2
  priorityClassName: high
  replicas: 1
  restartPolicy: Always

container:
  applicationRequestQueueAddress: ffc-ahwr-application-request
  applicationResponseQueueAddress: ffc-ahwr-application-response
  azureStorageConnectionString:
  azureStorageUseConnectionString: true
  azureStorageAccountName:
  cookiePassword: who-likes-cookies-i-like-cookies-everybody-likes-cookies
  eventQueueAddress: ffc-ahwr-event
  googleTagManagerKey:
  imagePullPolicy: IfNotPresent
  requestMemory: 120Mi
  requestCpu: 120m
  limitMemory: 120Mi
  limitCpu: 120m
  messageQueueHost: namespace.servicebus.windows.net
  notifyApiKey:
  notifyTemplateIdFarmerApplyLogin:
  port: 3000
  redisHostname: redis-hostname.default
  redisPartition: ffc-ahwr-farmer-apply
  redisPassword: redis
  redisPort: 6379
  serviceUri:
  claimServiceUri:
  testToken:
  urlPrefix: /apply

ingress:
  class: nginx
  endpoint: ffc-ahwr-farmer-apply
  server: value.replaced.from.app.config
  path: /apply
  type: minion

livenessProbe:
  path: /healthz
  port: 3000
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 5

readinessProbe:
  path: /healthy
  port: 3000
  initialDelaySeconds: 20
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 5

service:
  port: 80
  type: ClusterIP
